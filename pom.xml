<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.actia.ican.admin</groupId>
  <artifactId>app-ican-admin</artifactId>
  <version>3.8.0-SNAPSHOT</version>
  <name>D2Hub Web Admin</name>
  <organization>
    <name>ACTIA</name>
  </organization>
  <prerequisites>
    <maven>3.0.0</maven>
  </prerequisites>
  <scm>
    <connection>scm:git:git@git01.actia.com:D2HUB/app-ican-admin.git</connection>
    <developerConnection>scm:git:git@git01.actia.com:D2HUB/app-ican-admin.git</developerConnection>
    <url>https://git01.actia.com/D2HUB/app-ican-admin</url>
    <tag>HEAD</tag>
  </scm>
  <distributionManagement>
    <repository>
      <id>${server.actia.release}</id>
      <url>${repo.actia.release}</url>
    </repository>
    <snapshotRepository>
      <id>${server.actia.snapshot}</id>
      <url>${repo.actia.snapshot}</url>
    </snapshotRepository>
  </distributionManagement>
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.build.timestamp.format>yyyy-MM-dd'T'HH:mm:ss.SSSZ</maven.build.timestamp.format>
    <maven.test.skip>true</maven.test.skip>
  </properties>
  <pluginRepositories>
    <pluginRepository>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
      <id>artifactory-plugins</id>
      <name>artifactory-plugins</name>
      <url>${repo.actia.plugins}</url>
    </pluginRepository>
  </pluginRepositories>
  <build>
    <sourceDirectory>webapp</sourceDirectory>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-scm-plugin</artifactId>
          <version>1.11.2</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-site-plugin</artifactId>
          <version>3.9.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>3.0.0-M5</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-report-plugin</artifactId>
          <version>3.0.0-M5</version>
        </plugin>
        <plugin>
          <groupId>org.jfrog.buildinfo</groupId>
          <artifactId>artifactory-maven-plugin</artifactId>
          <version>3.4.0</version>
        </plugin>
        <plugin>
          <groupId>org.owasp</groupId>
          <artifactId>dependency-check-maven</artifactId>
          <version>6.2.2</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>3.2.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.2.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>2.5.5</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-clean-plugin</artifactId>
          <version>2.5</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>exec-maven-plugin</artifactId>
          <version>1.3.2</version>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-scm-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <executions>
          <execution>
            <id>attach-sources</id>
            <phase>verify</phase>
            <goals>
              <goal>jar-no-fork</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.jfrog.buildinfo</groupId>
        <artifactId>artifactory-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>build-info</id>
            <goals>
              <goal>publish</goal>
            </goals>
            <configuration>
              <publisher>
                <contextUrl>${context.url}</contextUrl>
                <username>${artifactory.username}</username>
                <password>${artifactory.password}</password>
                <repoKey>${repo.key}</repoKey>
                <snapshotRepoKey>${snapshotrepo.key}</snapshotRepoKey>
              </publisher>
            </configuration>
          </execution>
        </executions>
        <inherited>false</inherited>
      </plugin>
    </plugins>
  </build>
  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-report-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.owasp</groupId>
        <artifactId>dependency-check-maven</artifactId>
        <reportSets>
          <reportSet>
            <reports>
              <report>aggregate</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
    </plugins>
  </reporting>
  <profiles>
    <profile>
      <id>dev</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <build />
    </profile>
    <profile>
      <id>prod</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-jar-plugin</artifactId>
            <executions>
              <execution>
                <id>default-jar</id>
                <phase>none</phase>
                <configuration>
                  <finalName>unwanted</finalName>
                  <classifier>unwanted</classifier>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-assembly-plugin</artifactId>
            <executions>
              <execution>
                <phase>package</phase>
                <goals>
                  <goal>single</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <descriptors>
                <descriptor>assembly.xml</descriptor>
              </descriptors>
              <finalName>${project.artifactId}-${project.version}</finalName>
              <appendAssemblyId>false</appendAssemblyId>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-clean-plugin</artifactId>
            <configuration>
              <filesets>
                <fileset>
                  <directory>target</directory>
                </fileset>
              </filesets>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <executions>
              <!-- Required: The following will ensure `npm install` is called
                   before anything else during the 'Default Lifecycle' -->
              <execution>
                <id>npm install (initialize)</id>
                <goals>
                  <goal>exec</goal>
                </goals>
                <phase>initialize</phase>
                <configuration>
                  <executable>npm</executable>
                  <arguments>
                    <argument>install</argument>
                  </arguments>
                </configuration>
              </execution>
              <!-- Required: The following will ensure `npm install` is called
                   before anything else during the 'Clean Lifecycle' -->
              <execution>
                <id>npm install (clean)</id>
                <goals>
                  <goal>exec</goal>
                </goals>
                <phase>pre-clean</phase>
                <configuration>
                  <executable>npm</executable>
                  <arguments>
                    <argument>install</argument>
                  </arguments>
                </configuration>
              </execution>
              <!-- Optional: The following will output the npm configuration.
                   I do this so my CI logs will show the npm information used
                       for the build -->
              <execution>
                <id>npm config list (validate)</id>
                <goals>
                  <goal>exec</goal>
                </goals>
                <phase>validate</phase>
                <configuration>
                  <executable>npm</executable>
                  <arguments>
                    <argument>config</argument>
                    <argument>list</argument>
                  </arguments>
                </configuration>
              </execution>
              <!-- Required: This following calls `npm run build` where 'build' is
                   the script name I used in my project, change this if yours is
                       different -->
              <execution>
                <id>npm run build (compile)</id>
                <goals>
                  <goal>exec</goal>
                </goals>
                <phase>compile</phase>
                <configuration>
                  <executable>npm</executable>
                  <environmentVariables>
                    <FRONTVERSION>${project.version}</FRONTVERSION>
                    <LDAP>${ldap.enabled}</LDAP>
                    <TGUONLY>${tguonly.enabled}</TGUONLY>
                    <BUILDTIMESTAMP>${maven.build.timestamp}</BUILDTIMESTAMP>
                  </environmentVariables>
                  <arguments>
                    <argument>run</argument>
                    <argument>webpack</argument>
                  </arguments>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
      <properties>
        <yo.test.skip>true</yo.test.skip>
        <ldap.enabled>false</ldap.enabled>
        <tguonly.enabled>false</tguonly.enabled>
      </properties>
    </profile>
  </profiles>
</project>
